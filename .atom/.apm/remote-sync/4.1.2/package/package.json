{"name":"remote-sync","version":"4.1.2","description":"Upload your files to remote host after every change. Both SCP/SFTP and FTP are supported.","license":"MIT","repository":{"type":"git","url":"git+https://github.com/yongkangchen/remote-sync.git"},"main":"index.coffee","engines":{"atom":">=0.78"},"dependencies":{"async":"^0.2","atom-message-panel":"^1.1.1","atom-space-pen-views":"^2.0.3","chokidar":"^1.4.3","fs-plus":"^2.1","ftp":"^0.3.7","minimatch":"^0.2","mkdirp":"^0.3","ssh2":"^0.2"},"readme":"![Atom Remote Sync](http://i.imgur.com/xBqYanL.png)\n\n# Atom Remote Sync [![Atom.io](https://img.shields.io/badge/Atom.io-1.7.3-40A977.svg)](https://atom.io) [![GitHub stars](https://img.shields.io/github/stars/yongkangchen/remote-sync.svg)](https://github.com/yongkangchen/remote-sync/stargazers) [![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://raw.githubusercontent.com/yongkangchen/remote-sync/master/LICENSE) [![GitHub issues](https://img.shields.io/github/issues/yongkangchen/remote-sync.svg)](https://github.com/yongkangchen/remote-sync/issues)\n\nUse SFTP and FTP features inside Atom, having the ability to upload and download files directly from inside Atom.\n\n## Features\n\n- Uploading/downloading files to/from the server\n- Displaying diffs between the local and remote files with your favourite diff tool\n- Monitoring files for external changes and automatically uploading - useful for scss/less compiling\n- Support for both SCP/SFTP and FTP\n\n## Extras\n\n- Toggle for uploading changes automatically when you save a file\n- Define files to be monitored to be automatically monitoring\n- Set difftoolCommand in AtomSettingView of `remote-sync` -- The path to your diff tool executable\n- Toggle the logs for extra information\n- Toggle the hiding and showing of the log panel\n- Set custom config name\n\n## Installation\n\nYou can install this like any other Atom package, with one of these methods:\n\n### Via Atom (recommended)\n\n- Open Atom\n- Open settings\n\n  - <kbd>ctrl</kbd>+<kbd>,</kbd> | <kbd>cmd</kbd>+<kbd>,</kbd>\n  - Edit > Preferences (Linux)\n  - Atom > Preferences (OS X)\n  - File > Preferences (Windows)\n\n- Select \"Install\" tab\n- Search for `remote-sync` and click install\n\n### APM - terminal\n\n- Open a terminal\n- Run `apm install remote-sync`\n\n### Manually\n\n- Download / clone this repository to your `~/.atom/packages/`\n- Enter the directory\n- Run `apm install`\n\n## Usage\n\nYou can configure remote sync a couple of ways:\n\n### Existing project\n\n#### Via Atom (recommended)\n\n1. Right click main project folder\n2. Navigate to Remote Sync > Configure\n3. Fill in the details / select options\n4. Hit save\n\n#### Manually\n\n1. Add a file named `.remote-sync.json` to your project\n2. Add/configure with one of the contents below\n3. Save the file\n\n### From scratch, with a remote server\n\n1. Follow setups for creating existing project - see above\n1. Right click main project folder\n2. Navigate to Remote Sync > Download folder\n\n\n## Options\n\nThe `.remote-sync.json` in your project root will use these options:\n\n\n| Option            | Datatype | Default                         | Details                                                                                        |\n|-------------------|----------|---------------------------------|------------------------------------------------------------------------------------------------|\n| `transport`       | String   | \"\"                              | `scp` for SCP/SFTP, or `ftp` for FTP                                                           |\n| `hostname`        | String   | \"\"                              | Remote host address                                                                            |\n| `port`            | String   | \"\"                              | Remort port to connect on (typically 22 for SCP/SFTP, 21 for FTP)                              |\n| `username`        | String   | \"\"                              | Remote host username                                                                           |\n| `password`        | String   | \"\"                              | Remote host password                                                                           |\n| `keyfile`         | String   | \"\"                              | Absolute path to SSH key (only used for SCP)                                                   |\n| `passphrase`      | String   | \"\"                              | Passphrase for the SSH key (only used for SCP)                                                 |\n| `useAgent`        | String   | false                           | Whether or not to use an agent process (only used for SCP)                                     |\n| `target`          | String   | \"\"                              | Target directory on remote host                                                                |\n| `source`          | String   | \"\"                              | Source directory relative to project root                                                      |\n| `ignore`          | Array    | [\".remote-sync.json\",\".git/**\"] | Array of [minimatch](https://github.com/isaacs/minimatch) patterns of files to ignore          |\n| `watch`           | Array    | []                              | Array of files (relative to project root - starting with \"/\") to watch for changes             |\n| `uploadMirrors`   | Array    | []                              | Transport mirror config array when upload                                                      |\n| `uploadOnSave`    | Boolean  | false                           | Whether or not to upload the current file when saved                                           |\n| `saveOnUpload`    | Boolean  | false                           | Whether or not to save a modified file before uploading                                        |\n| `useAtomicWrites` | Boolean  | false                           | Upload file using a temporary filename before moving to its final location (only used for SCP) |\n| `deleteLocal`     | Boolean  | false                           | Whether or not to delete the local file / folder after remote delete                           |\n\n\n## Example configuration's\n\n### SCP example:\n\n```json\n{\n  \"transport\": \"scp\",\n  \"hostname\": \"10.10.10.10\",\n  \"port\": 22,\n  \"username\": \"vagrant\",\n  \"password\": \"vagrant\",\n  \"keyfile\": \"/home/vagrant/.ssh/aws.pem\",\n  \"passphrase\": \"your_passphrase\",\n  \"target\": \"/home/vagrant/dirname/subdirname\",\n  \"ignore\": [\n    \".remote-sync.json\",\n    \".git/**\"\n  ],\n  \"watch\":[\n    \"/css/styles.css\",\n    \"/index.html\"\n  ]\n}\n```\n\n### SCP `useAgent` example:\n\n```json\n{\n  \"transport\": \"scp\",\n  \"hostname\": \"10.10.10.10\",\n  \"port\": 22,\n  \"username\": \"vagrant\",\n  \"useAgent\": true,\n  \"target\": \"/home/vagrant/dirname/subdirname\",\n  \"ignore\": [\n    \".remote-sync.json\",\n    \".git/**\"\n  ],\n  \"watch\":[\n    \"/css/styles.css\",\n    \"/index.html\"\n  ]\n}\n```\n\n### FTP example:\n\n```json\n{\n  \"transport\": \"ftp\",\n  \"hostname\": \"10.10.10.10\",\n  \"port\": 21,\n  \"username\": \"vagrant\",\n  \"password\": \"vagrant\",\n  \"target\": \"/home/vagrant/dirname/subdirname\",\n  \"ignore\": [\n    \".remote-sync.json\",\n    \".git/**\"\n  ],\n  \"watch\":[\n    \"/css/styles.css\",\n    \"/index.html\"\n  ]\n}\n```\n\n### Upload mirrors example:\n\n```json\n{\n  \"transport\": \"scp\",\n  \"hostname\": \"10.10.10.10\",\n  \"port\": 22,\n  \"username\": \"vagrant\",\n  \"password\": \"vagrant\",\n  \"keyfile\": \"/home/vagrant/.ssh/aws.pem\",\n  \"passphrase\": \"your_passphrase\",\n  \"target\": \"/home/vagrant/dirname/subdirname\",\n  \"ignore\": [\n    \".remote-sync.json\",\n    \".git/**\"\n  ],\n  \"watch\":[\n    \"/css/styles.css\",\n    \"/index.html\"\n  ],\n  \"uploadMirrors\":[\n    {\n      \"transport\": \"scp\",\n      \"hostname\": \"10.10.10.10\",\n      \"port\": 22,\n      \"username\": \"vagrant\",\n      \"password\": \"vagrant\",\n      \"keyfile\": \"/home/vagrant/.ssh/aws.pem\",\n      \"passphrase\": \"your_passphrase\",\n      \"target\": \"/home/vagrant/dirname/subdirname_one\",\n      \"ignore\": [\n        \".remote-sync.json\",\n        \".git/**\"\n      ]\n    },\n    {\n      \"transport\": \"ftp\",\n      \"hostname\": \"10.10.10.10\",\n      \"port\": 21,\n      \"username\": \"vagrant\",\n      \"password\": \"vagrant\",\n      \"target\": \"/home/vagrant/dirname/subdirname_two\",\n      \"ignore\": [\n        \".remote-sync.json\",\n        \".git/**\"\n      ]\n    }\n  ]\n}\n```\n\n# Make a donation via Paypal ![Make a donation via Paypal](https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif)\n\nClick 'Send Money' after login PayPal, and my PayPal account is: lx1988cyk#gmail.com\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/yongkangchen/remote-sync/issues"},"homepage":"https://github.com/yongkangchen/remote-sync#readme","_id":"remote-sync@4.1.2","_shasum":"20614477bab5e7d28125d0f84066e07bb3e729e3","_resolved":"file:../d-116431-1313-1dp5xt0/package.tgz","_from":"../d-116431-1313-1dp5xt0/package.tgz"}